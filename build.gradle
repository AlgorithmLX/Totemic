plugins {
    id 'java-library'
    id 'eclipse'
    id 'maven-publish'
    id 'net.neoforged.gradle.userdev' version '7.0.96'
    id 'net.darkhax.curseforgegradle' version '1.1.+'
    id 'com.modrinth.minotaur' version '2.+'
}

version = mod_version
group = mod_group_id

repositories {
    mavenLocal()
}

base {
    archivesName = 'Totemic-neoforge'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    accessTransformers {
        file('src/main/resources/META-INF/accesstransformer.cfg')
    }
}

runs {
    configureEach {
        systemProperty 'forge.logging.markers', 'REGISTRIES'
        systemProperty 'forge.logging.console.level', 'debug'

        modSources sourceSets.main, sourceSets.test
    }

    client {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }

    server {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
        //programArgument '--nogui'
    }

    gameTestServer {
        systemProperty 'forge.enabledGameTestNamespaces', project.mod_id
    }
    
    data {
        programArguments.addAll '--mod', project.mod_id, '--all', '--output', file('src/generated/resources/').getAbsolutePath(), '--existing', file('src/main/resources/').getAbsolutePath()
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven { url 'https://maven.blamejared.com' }
}

dependencies {
    implementation "net.neoforged:neoforge:${neo_version}"
    
    //compileOnly fg.deobf("vazkii.patchouli:Patchouli:1.19.2-77:api")
    //runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:1.20.2-77")
}

tasks.withType(ProcessResources).configureEach {
    var replaceProperties = [
            minecraft_version   : minecraft_version, minecraft_version_range: minecraft_version_range,
            neo_version         : neo_version, neo_version_range: neo_version_range,
            loader_version_range: loader_version_range,
            mod_id              : mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors         : mod_authors, mod_description: mod_description,
    ]
    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml']) {
        expand replaceProperties + [project: project]
    }
    
    //Workaround to get the game to launch in Eclipse
    //Hopefully temporary
    var resourceTargets = ['META-INF/mods.toml', 'pack.mcmeta']
    var intoTargets = ["$rootDir/bin/main/"]
    intoTargets.each { target ->
        if (file(target).exists()) {
            copy {
                from(sourceSets.main.resources) {
                    include resourceTargets
                    expand replaceProperties
                }
                into target
            }
        }
    }
}

task apiSrcJar(type: Jar) {
    from(sourceSets.main.java) {
        include 'pokefenn/totemic/api/**'
    }
    archiveAppendix = 'api'
    archiveClassifier = 'sources'
}

artifacts {
    archives apiSrcJar
}

task publishCurseForge(type: net.darkhax.curseforgegradle.TaskPublishCurseForge) {
    apiToken = findProperty('curseForgeApiKey')
    
    def mainFile = upload(237541, jar)
    mainFile.releaseType = mod_release_type
    mainFile.changelog = file('changelog.md')
    mainFile.changelogType = 'markdown'
    mainFile.addOptional('patchouli')
    
    def apiSrcFile = mainFile.withAdditionalFile(apiSrcJar)
}

modrinth {
    token = findProperty('modrinthApiToken')
    projectId = 'fenns_totemic'
    versionType = mod_release_type
    uploadFile = jar
    gameVersions = ["${minecraft_version}"]
    loaders = ["neoforge"]
    changelog = file('changelog.md').text
    dependencies {
        optional.project 'patchouli'
    }
    additionalFiles = [apiSrcJar]
}

publishing {
    publications {
        register('mavenJava', MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
