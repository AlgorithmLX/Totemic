buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://maven.minecraftforge.net/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

/*plugins {
    id 'com.matthewprenger.cursegradle' version '1.1.2'
}*/

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

version = "1.12.2-0.11.7"
group = "pokefenn.totemic"
archivesBaseName = "Totemic"

minecraft {
    mappings channel: 'snapshot', version: '20180529-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    accessTransformer = file('src/main/resources/META-INF/totemic_at.cfg')

    /*replaceIn "Totemic.java"
    replace "\${version}", project.version
    replace '@FINGERPRINT@', project.findProperty('signSHA1')*/
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }

        server {

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

/*repositories {
    maven {
        url "http://tehnut.info/maven"
    }
}

dependencies {
    deobfCompile "mcp.mobius.waila:Hwyla:1.8.26-B41_1.12.2"
}*/

/*processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}*/

task deobfJar(type: Jar) {
    from(sourceSets.main.output) {
        appendix = 'deobf'
    }
}

// Create API source jar
task apiSrcJar(type: Jar) {
    from(sourceSets.main.java) {
        include 'pokefenn/totemic/api/**'
        appendix = 'api'
    }
    classifier = 'sources'
}

/*task signJar(type: SignJar, dependsOn: reobfJar) {
    // Skips if the keyStore property is missing.
    onlyIf {
        project.hasProperty('keyStore')
    }

    // findProperty allows us to reference the property without it existing.
    // Using project.propName would cause the script to fail validation if
    // the property did not exist.
    keyStore = project.findProperty('keyStore')
    alias = project.findProperty('keyStoreAlias')
    storePass = project.findProperty('keyStorePass')
    keyPass = project.findProperty('keyStoreKeyPass')
    inputFile = jar.archivePath
    outputFile = jar.archivePath
}

// Runs this task automatically when reobfJar is ran.
reobfJar.finalizedBy signJar*/
jar.finalizedBy('reobfJar')

artifacts {
    archives deobfJar
    archives apiSrcJar
}

/*curseforge {
    apiKey = project.hasProperty('curseForgeApiKey') ? project.curseForgeApiKey : ''

    project {
        id = '237541'
        changelog  = ''
        releaseType = 'beta'

        addArtifact deobfJar
        addArtifact apiSrcJar
    }
}*/
